/* tslint:disable */
/* eslint-disable */
/**
 * Goal API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    Goal,
    GoalFromJSON,
    GoalToJSON,
    PostGoal,
    PostGoalFromJSON,
    PostGoalToJSON,
} from '../models';

export interface Api1GoalsDeleteRequest {
    body?: number;
}

export interface Api1GoalsPostRequest {
    postGoal?: PostGoal;
}

/**
 * no description
 */
export class GoalsApi extends runtime.BaseAPI {

    /**
     */
    async api1GoalsDeleteRaw(requestParameters: Api1GoalsDeleteRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1/goals`,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.body as any,
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async api1GoalsDelete(requestParameters: Api1GoalsDeleteRequest): Promise<void> {
        await this.api1GoalsDeleteRaw(requestParameters);
    }

    /**
     */
    async api1GoalsGetRaw(): Promise<runtime.ApiResponse<Array<Goal>>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/1/goals`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(GoalFromJSON));
    }

    /**
     */
    async api1GoalsGet(): Promise<Array<Goal>> {
        const response = await this.api1GoalsGetRaw();
        return await response.value();
    }

    /**
     */
    async api1GoalsPostRaw(requestParameters: Api1GoalsPostRequest): Promise<runtime.ApiResponse<void>> {
        const queryParameters: runtime.HTTPQuery = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/1/goals`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostGoalToJSON(requestParameters.postGoal),
        });

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async api1GoalsPost(requestParameters: Api1GoalsPostRequest): Promise<void> {
        await this.api1GoalsPostRaw(requestParameters);
    }

}
